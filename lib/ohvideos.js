// Generated by CoffeeScript 1.12.5
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(function() {
    var ohvideos;
    ohvideos = (function() {
      function ohvideos(width, height, sites) {
        this.width = width != null ? width : 480;
        this.height = height != null ? height : 270;
        this.sites = sites;
        this.refresh = bind(this.refresh, this);
        this.responsive = bind(this.responsive, this);
        this.masterDiv = $('.oharaEmbed');
        this.basedElement = this.masterDiv.parent();
        this.aspectRatio = this.height / this.width;
        this.main();
        this.responsive();
      }

      ohvideos.prototype.main = function() {
        $.each(this.sites, (function(_this) {
          return function(site) {
            return $.each("." + site.identifier, function(video) {
              video.domElement = $(_this);
              video = $.extend(video, $.parseJSON(decodeURIComponent(video.domElement.data('ohara_' + site.identifier))));
              video.embedUrl = site.embedUrl.replace('{video_id}', video.video_id);
              video.requestUrl = site.requestUrl.replace('{video_id}', video.video_id);
              video = _this.getData(video);
              return video = _this.createVideo(video);
            });
          };
        })(this));
        return this.responsive();
      };

      ohvideos.prototype.createVideo = function(video) {
        var vDiv;
        vDiv = $('<div/>');
        vDiv.attr({
          "class": "oharaEmbed_play"
        });
        video.domElement.append(vDiv);
        video.domElement.on("click", (function(_this) {
          return function() {
            return $(_this).html(function(video) {
              var iframe;
              iframe = $('<iframe/>');
              return iframe({
                frameborder: '0',
                src: video.embedUrl,
                width: _this.width,
                height: _this.height,
                allowfullscreen: '',
                "class": "oharaEmbedIframe"
              });
            });
          };
        })(this));
        return video;
      };

      ohvideos.prototype.getData = function(video) {
        var title;
        title = $('<div/>');
        title.attr({
          "class": "oharaEmbed_title"
        });
        $.ajax("//noembed.com/embed", {
          url: video.requestUrl,
          type: 'GET',
          dataType: 'json',
          error: function(jqXHR, textStatus, errorThrown) {
            return title.html(textStatus);
          },
          success: function(data, textStatus, jqXHR) {
            title.html(data.title);
            return video.domElement.css(background - {
              image: 'url(' + data.thumbnail_url(+')', background - {
                size: 'cover'
              })
            });
          }
        });
        video.domElement.append(title);
        return video;
      };

      ohvideos.prototype.responsive = function() {
        return $(window).resize(function() {
          var applyHeight, applyResize, applyWidth, newHeight, newWidth;
          newWidth = this.basedElement.width();
          newHeight = Math.min(newWidth * this.aspectRatio, this.height);
          applyResize = newWidth <= this.width;
          applyWidth = applyResize ? newWidth : this.width;
          applyHeight = applyResize ? newHeight : this.height;
          this.masterDiv.width(applyWidth);
          this.masterDiv.height(applyHeight);
          return $('iframe.oharaEmbedIframe').each((function(_this) {
            return function() {
              $(_this).width(applyWidth);
              return $(_this).height(applyHeight);
            };
          })(this));
        })();
      };

      ohvideos.prototype.refresh = function(timeWait) {
        return setTimeout((function(_this) {
          return function() {
            _this.main();
            return _this.responsive();
          };
        })(this), timeWait || 3e3);
      };

      return ohvideos;

    })();
    return oh_refresh(function(timeWait) {
      var ohObject;
      return ohObject = ohObject || new ohvideos();
    });
  });

}).call(this);
